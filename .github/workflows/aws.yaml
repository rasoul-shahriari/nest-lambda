name: Connect to an AWS role from a GitHub repository

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION : eu-north-1

permissions:
      id-token: write
      contents: read
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 1200

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and build backend Dependencies
        working-directory: backend
        run: | 
          npm install
          npm run build

      - name: Deploy backend to AWS Lambda
        run: npm serverless deploy
        env:
          SERVERLESS_SERVICE: nest-lambda-demo
          AWS_LAMBDA_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubAction-AssumeRoleWithAction

      - name: Install frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Build and Export Next.js Application
        run: |
          npm run build

      - name: Sync to S3 Bucket
        run: aws s3 sync frontend/out s3://${{ secrets.AWS_S3_BUCKET }}/ --exact-timestamps --delete --region ${{ env.AWS_REGION }}
      
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" --region ${{ env.AWS_REGION }}
